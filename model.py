from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import create_engine, ForeignKey
from sqlalchemy import Column, Integer, String, Boolean

#sqlalchemy session is a handle to interact with db
from sqlalchemy.orm import sessionmaker, scoped_session, relationship, backref

#no longer need to instantiate Session class
engine = create_engine("mysql://christinaliu@127.0.0.1/burrito", echo=False)
#need a password for db 
session = scoped_session(sessionmaker(bind=engine, 
									autocommit = False, 
									autoflush = False))


ENGINE = None
Session = None

# OMFG remember to type in column names to the python to sql magic 
# ie) u = models.User(nickname='john', email='john@email.com')
Base = declarative_base()
# Base.metadata.create_all(engine)
Base.query = session.query_property()

class User(Base):
	__tablename__='users'

	id = Column(Integer, primary_key=True) 
	screenname = Column(String(64), nullable=False)
	email = Column(String(64), nullable=False)
	password = Column(String(64), nullable=False)
	diet = Column(String(64), nullable=True)
	# image 
	# location = Column(String(64), nullable=True)

class Restaurant(Base):
	__tablename__='restaurants'
	id = Column(Integer, primary_key=True)
	name = Column(String(56))
	neighborhood = Column(String(56)) 
	#image

class Burrito(Base):
	__tablename__='burritos'

	id = Column(Integer, primary_key=True) 
	diet = Column(String(64), nullable=True)
	name = Column(String(64), nullable=False)
	protien = Column(String(64), nullable=False)
	bean = Column(String(64), nullable=True)
	rice = Column(Boolean(), nullable=True)
	monies = Column(Integer, nullable=False)	
	spicy = Column(Integer, nullable=False)
	size = Column(Integer, nullable=False)
	structure = Column(Integer, nullable =False)
	special = Column(String(256), nullable=True)
	exotic = Column(String(256),nullable=True)
	self_sum = Column(String(1024), nullable=False)
	image = Column(String(1024), nullable=True)
	restaurant_id = Column(Integer, ForeignKey('restaurants.id'))
	
	restaurant = relationship('Restaurant', backref=backref('restaurants'), order_by=id)


class Question(Base):	
	__tablename__='questions'

	id = Column(Integer, primary_key=True)
	text = Column(String(256), nullable=False)
	category = Column(String(64), nullable=False)

class Choice(Base):
	__tablename__='choices'

	id = Column(Integer, primary_key=True)
	text = Column(String(256), nullable=False)
	score = Column(Integer, nullable=False) 			#(1, 0, -1)
	question_id = Column(Integer, ForeignKey('questions.id'))
	
	question = relationship('Question', backref=backref('choices'), order_by=id)

class User_Choice(Base): 
	__tablename__='user_choices'

	id = Column(Integer, primary_key=True)	
	question_id= Column(Integer, ForeignKey('questions.id'))
	choice_id = Column(Integer, ForeignKey('choices.id'))
	user_id = Column(Integer, ForeignKey('users.id'))

	choice = relationship('Choice', backref=backref('user_choices'), order_by=id)
	question = relationship('Question', backref=backref('user_choices'), order_by=id)
	user = relationship('User', backref=backref('user_choices'), order_by=id)

	
def connect():
	global ENGINE
	global Session

	ENGINE = create_engine("mysql://christinaliu@127.0.0.1/burrito", echo = True)	
	#Session is a class generated by sqlalchemy, using sessionmaker
	Session = sessionmaker(bind=ENGINE)

	return Session()


def main():
   
    session = connect()

if __name__ == "__main__":
    main()